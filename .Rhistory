qbs[1, c(passcomps, passattempts, passyards)]/16
names(qbs)
qbs[1,names(qbs)]
source('~/fantasysports/football/qb-gradient-descent.R')
for (i in 1:dim(qbs)[1]) {
qbs[i] <- qbs[i, c(passcomps,passattempts, passyards)]/qbs[i,games]
}
warnings()
View(qbs)
for (i in 1:dim(qbs)[1]) {
qbs[i,] <- qbs[i, c(passcomps,passattempts, passyards)]/qbs[i,games]
}
qb[1,]
qbs <- merge(season, qbpoints, by="player")
qbs
qbs[1,3:8]
for (i in 1:1){#dim(qbs)[1]) {
qbs[1,] <- qbs[1, c(passcomps,passattempts, passyards)]/qbs[1,games]
print(qbs)
}
for (i in 1:1){#dim(qbs)[1]) {
qbData[1,] <- qbs[1, c(passcomps,passattempts, passyards)]/qbs[1,games]
print(qbs)
}
for (i in 1:1){#dim(qbs)[1]) {
qbData[1,] <- qbs[1, c(passcomps,passattempts, passyards)]/qbs[1,games]
print(qbData)
}
qbData <- NULL
for (i in 1:1){#dim(qbs)[1]) {
qbData[1,] <- qbs[1, c(passcomps,passattempts, passyards)]/qbs[1,games]
print(qbData)
}
qbData <- NULL
for (i in 1:1){#dim(qbs)[1]) {
qbData[1,] <- qbs[1, ]#/qbs[1,games]
print(qbData)
}
qbData <- NULL
qbData
qbData <- qbs
head(qbData)
qbData <- NULL
qbData <- NULL
for (i in 1:1){#dim(qbs)[1]) {
qbData <- qbs[1, ]#/qbs[1,games]
print(qbData)
}
qbs <- merge(season, qbpoints, by="player")
qbData <- qbs[1, ]#/qbs[1,games]
print(qbData)
qbs <- merge(season, qbpoints, by="player")
qbData <- NULL
for (i in 1:1){#dim(qbs)[1]) {
qbData <- rbind(qbData, data.table(qbs[i,]))
print(qbData)
}
qbs <- merge(season, qbpoints, by="player")
qbData <- NULL
for (i in 1:2){#dim(qbs)[1]) {
qbData <- rbind(qbData, data.table(qbs[i,]))
print(qbData)
}
qbs <- merge(season, qbpoints, by="player")
?data.table
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- rbind(avgStats, data.table(season[i,]))
print(avgStats)
}
avgStats <- NULL
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- rbind(avgStats, data.table(season[i,]))
print(avgStats)
}
paste(names(season))
data.table(season[1,])
data.table(season[1,4:8])
data.table(season[1,c(4,5,6)])
data.table(season[1,])
data.table(season[1:5,])
data.table(season[1,1])
data.table(season[1,games])
data.table(season[1,"games"])
data.table(season[1,c("games")])
str(season)
season[1,1]
season[1,]
dim(season)
season[,1]
names(season)
?read.xlsx
# library(xlsx); library(dplyr); library(data.table)
# setwd("C:/Users/Philippe/Documents/fantasysports/football")
season2015 <- data.table(read.xlsx("2015-season-results.xlsx", sheetIndex = 1, colClasses = TRUE))
qbPointsWk1 <- data.table(read.xlsx("qb-points-wk1-2016.xlsx", sheetIndex = 1))
# remove numbers from qb names
for (i in 0:9) {
season2015$player <- gsub(i, "", season2015$player)
qbPointsWk1$player <- gsub(i, "", qbPointsWk1$player)
}
# remove punctuation from qb names
season2015$player <- sub("[.]", "", season2015$player)
qbPointsWk1$player <- sub("[.]", "", qbPointsWk1$player)
#select current week's points
qbpoints <- qbPointsWk1 %>% select(player, ffpoints)
#select previous weeks average stats and remove previous season's points
season <- season2015 %>% select(-ffpoints, -ffppergame)
avgStats <- NULL
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- rbind(avgStats, data.table(season[i,]))
print(avgStats)
}
#merge previous week stats with current week points
qbs <- merge(season, qbpoints, by="player")
dim(season)
season[1,1]
season2015 <- data.table(read.xlsx("2015-season-results.xlsx", sheetIndex = 1, colClasses = TRUE))
season2015 <- data.table(read.xlsx("2015-season-results.xlsx", sheetIndex = 1, stringsAsFactors = F, colClasses = TRUE))
qbs
qbs[1,]
qbs[,1]
qbs[,player]
season[,player]
source('~/fantasysports/football/qb-gradient-descent.R')
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards)]
print(avgStats)
}
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]
print(avgStats)
}
length(avgStats)
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i/games]
print(avgStats)
}
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i,games]
print(avgStats)
}
head(season)
296/16
402/16
rm(avgStats)
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i,games]
print(avgStats)
}
avgQbs <- NULL
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i,games]
avgQbs <- rbind(avgQbs, data.table(avgStats))
print(avgQbs)
}
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i,games]
avgQbs <- rbind(avgQbs, avgStats)
print(avgQbs)
}
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season[i, c(passcomps, passattempts, passyards, passtds, passints,
rushattempts, rushyards, rushtds)]/season[i,games]
# avgQbs <- rbind(avgQbs, data.table(avgStats))
# print(avgQbs)
}
avgStats
?mutate_each
mutate_each(season, passattempts:rushtds/16)
names(season)
mutate_each(season, passcomps:rushtds/16)
?subset
season$games/16
season$games:passattempts
season$games:season$passattempts
str(season)
season[1,3]
[1,3]
x <- as.data.frame(season)
str(x)
dim(x)
x[1,]
x[,1]
x[,1:3]
x[1,games]
x[1,"games"]
x[1,1]
mutate(season, games = games/16)
mutate(season, games:passcomps = games:passcomps/16)
names(season)
avgQbs <- NULL
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season %>% select(passcomps, rushtds)
avgQbs <- rbind(avgQbs, data.table(avgStats))
print(avgQbs)
}
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season %>% select(passcomps, rushtds)
avgQbs <- rbind(avgQbs, data.table(avgStats))
}
View(avgQbs)
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season %>% select(passcomps:rushtds)
avgQbs <- rbind(avgQbs, data.table(avgStats))
}
avgQbs <- NULL
for (i in 1:2){#dim(qbs)[1]) {
avgStats <- season %>% select(passcomps:rushtds)
avgQbs <- rbind(avgQbs, data.table(avgStats))
}
View(avgQbs)
avgStats[1,]
avgStats[1,]/16
getwd()
setwd("..")
getwd()
setwd("..")
getwd()
setwd("./DataScience/repResearch/wk2hw")
list.files()
getwd()
dirCheck <-getwd();
dirCheck
dirHw <- "C:/Users/Philippe/Documents/DataScience/repResearch/wk2hw"
dirHw
dirCheck <- getwd();
dirHw <- "C:/Users/Philippe/Documents/DataScience/repResearch/wk2hw"
if (dirCheck != dirHw) {
setwd(dirHw)
getwd()
}
setwd(~)
setwd("~/")
getwd()
dirCheck <- getwd();
dirHw <- "C:/Users/Philippe/Documents/DataScience/repResearch/wk2hw"
if (dirCheck != dirHw) {
setwd(dirHw)
getwd()
}
getwd()
?read.csv
source('~/DataScience/repResearch/wk2hw/hw2.R')
source('~/DataScience/repResearch/wk2hw/hw2.R')
View(rawData)
dim(rawData)
is.na(rawData)
sum(is.na(rawData))
sum(is.na(rawData$steps))
str(rawData)
str(compCases)
source('~/DataScience/repResearch/wk2hw/hw2.R')
str(compCases)
source('~/DataScience/repResearch/wk2hw/hw2.R')
str(compCases)
rm(compCases)
ls()
source('~/DataScience/repResearch/wk2hw/hw2.R')
?tapply
names(compCases)
tapply(compCasese, data, sum)
tapply(compCases, data, sum)
tapply(compCases, date, sum)
tapply(compCases$data, sum)
is.factor(compCases$data)
is.factor(compCases$date)
levels(compCases$date)
tapply(compCases$steps, compCases$date, sum)
?tapply
source('~/DataScience/repResearch/wk2hw/hw2.R')
names(compCases)
source('~/DataScience/repResearch/wk2hw/hw2.R')
source('~/DataScience/repResearch/wk2hw/hw2.R')
source('~/DataScience/repResearch/wk2hw/hw2.R')
source('~/DataScience/repResearch/wk2hw/hw2.R')
totalSteps1
View(compCases)
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram()
names(totalSteps2)
source('~/DataScience/repResearch/wk2hw/hw2.R')
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram()
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram(stat="identity")
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram(stat="identity", binwidth = 7)
ggplot(totalSteps2, aes(x=date, fill=steps)) + geom_histogram()
ggplot(totalSteps2, aes(x=date, fill=steps)) + geom_histogram(stat="count")
ggplot(totalSteps2, aes(x=date, fill=steps)) + geom_histogram(stat="identity")
source('~/DataScience/repResearch/wk2hw/hw2.R')
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram(stat="identity")
?geom_histogram()
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram(stat="identity", bins=30)
ggplot(totalSteps2, aes(x=date, y=steps)) + geom_histogram(stat="identity", bins=10)
ggplot(totalSteps2, aes(steps)) + geom_histogram()
ggplot(totalSteps2, aes(steps)) + geom_histogram(binwidth = 30)
ggplot(totalSteps2, aes(steps)) + geom_histogram(binwidth = 60)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=60)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30)
ggplot(totalSteps2, aes(steps)) + geom_histogram()
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30)
summary(totalSteps2)
names(totalSteps2)
dim(totalSteps2)
summary(totalSteps2$steps)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=15)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=40)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="white")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="blue")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="cyan")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="red")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="blue", fill="red")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="red", fill="blue")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="purple")
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
#panel.grid.major=element_line("yellow"),
panel.background = element_rect("black"))
source('~/DataScience/repResearch/wk2hw/hw2.R')
source('~/DataScience/repResearch/wk2hw/hw2.R')
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("green"),
panel.background = element_rect("black"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="yellow", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
#panel.grid.major=element_line("yellow"),
panel.background = element_rect("black"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="green", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
#panel.grid.major=element_line("yellow"),
panel.background = element_rect("black"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
#panel.grid.major=element_line("yellow"),
panel.background = element_rect("black"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
#panel.grid.major=element_line("yellow"),
panel.background = element_rect("green"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="purple") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("black"),
panel.background = element_rect("green"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="green") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("purple"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="green") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("purple"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="pink") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("black"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="black") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("pink"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="white", fill="green") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("purple"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="green") +
theme(
plot.title=element_text(hjust=.5),
panel.grid.major=element_line("white"),
panel.background = element_rect("purple"))
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="green") +
theme(
plot.title=element_text(hjust=.5))
source('~/DataScience/repResearch/wk2hw/hw2.R')
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="purple") +
theme(
plot.title=element_text(hjust=.5))
totalSteps2
IQR(totalSteps2)
IQR(totalSteps2$steps)
IQR(totalSteps2$steps)
summary(totalSteps2$steps)
View(totalSteps1)
library(dplyr); library(ggplot2); library(data.table)
dirCheck <- getwd();
dirHw <- "C:/Users/Philippe/Documents/DataScience/repResearch/wk2hw"
if (dirCheck != dirHw) {
setwd(dirHw)
}
rawData <- read.csv("activity.csv")
compCases <- rawData[complete.cases(rawData),]
totalSteps1 <- tapply(compCases$steps, compCases$date, sum)
totalSteps2 <- compCases %>% group_by(date) %>% summarize(steps = sum(steps))
summary(totalSteps2$steps)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="purple") +
theme(plot.title=element_text(hjust=.5))
View(totalSteps1)
source('~/DataScience/repResearch/wk2hw/hw2.R')
View(compCases)
View(compCases)
names(compCases)
ggplot(compCases, aes(x=interval, y= steps)) + geom_line()
avgPerDay <- compCases %>% group_by(date) %>% summary(avgsteps = mean(steps))
View(avgPerDay)
totalSteps1 <- tapply(compCases$steps, compCases$date, sum)
totalSteps2 <- compCases %>% group_by(date) %>% mutate(steps = sum(steps)) #was 'summarize'
summary(totalSteps2$steps)
ggplot(totalSteps2, aes(steps)) + geom_histogram(bins=30, color="black", fill="purple") +
theme(plot.title=element_text(hjust=.5))
avgPerDay <- compCases %>% group_by(date) %>% mutate(avgsteps = mean(steps))
View(avgPerDay)
ggplot(compCases, aes(x=interval, y= steps)) + geom_line()
ggplot(avgPerDay, aes(x=interval, y= avgsteps)) + geom_line()
ggplot(avgPerDay, aes(x=date, y= avgsteps)) + geom_line()
range(compCases$interval)
avgPerDay <- compCases %>% group_by(interval) %>% mutate(avgsteps = mean(steps))
ggplot(avgPerDay, aes(x=interval, y= avgsteps)) + geom_line()
install.packages("impute")
?scale()
?impute.knn
source("https://bioconductor.org/biocLite.R")
biocLite()
?impute.knn
install.packages(impute)
install.packages("impute")
library(BiocInstaller)
?bioclite
?biocLite
biocLite(pkgs="impute")
?impute
impute()
?impute.knn
biocLite("impute")
?impute
??impute
?impute.knn
citation("impute")
impute.knn()
biocLite()
?impute.knn
biocLite("impute")
biocValid("impute")
library("impute")
?impute.knn
impute.knn()
impute(compCases)
impute.knn(compCases)
impute.knn(compCases$steps)
impute.knn(as.matrix(compCases))
impute.knn(compCases)$steps
str(compCases)
x <- as.double(compCases)
impute.knn(as.matrix(compCases$steps))
impute.knn(compCases$steps)
impute.knn(compCases)
impute.knn(as.data.frame(compCases))
warnings()
install.packages(imputation)
install.packages("imputation")
library(imputation)
library("imputation")
x <- as.matrix(compCases)
dim(x)
x <- as.matrix(compCases$steps)
dim(x)
sum(is.na(x))
View(x)
sum(is.na(rawData$steps))
is.na(rawData)
sum(is.na(rawData))
impute.knn(rawData)
impute.knn(rawData$steps)
impute.knn(rawData)$steps
x <- as.matrix(rawData$steps)
str(x)
sum(is.na(x))
impute.knn(x)
dim(x)
impute.knn(x, k=10, rowmax=1)
class(x)
impute.knn(x)
impute.knn(data = x)
x <- as.matrix(c(1,2,3,"NA",5), ncol=1)
x
class(x)
x[1,1]
x[1,1] + x[1,1]
x <- as.matrix(c(1,2,3,NA,5), ncol=1)
x
impute.knn(x)
x <- as.matrix(c(1,2,3,NA,5,6), ncol=2)
x
x <- as.matrix(c(1,2,3,NA,5,6), nrow=3)
x
x
?as.matrix
source('~/DataScience/repResearch/wk2hw/hw2.R')
